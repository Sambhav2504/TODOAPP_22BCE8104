{"ast":null,"code":"var _jsxFileName = \"G:\\\\Sambhav\\\\JAVA FULL STACK\\\\API\\\\todoapp\\\\client\\\\src\\\\Views\\\\TODO\\\\TODO.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Styles from './TODO.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TODO() {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const [todoData, setTodoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editingDescription, setEditingDescription] = useState('');\n  useEffect(() => {\n    const fetchTodo = async () => {\n      const apiData = await getTodo();\n      setTodoData(apiData);\n      setLoading(false);\n    };\n    fetchTodo();\n  }, []);\n  const getTodo = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/todo');\n      console.log('Fetched todos:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching todos:', err);\n      return [];\n    }\n  };\n  const addTodo = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/todo', {\n        title: newTodo\n      });\n      console.log('Added todo:', response.data);\n      setTodoData([...todoData, response.data]);\n      setNewTodo('');\n    } catch (err) {\n      console.error('Error adding todo:', err);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:8000/api/todo/${id}`);\n      console.log('Deleted todo with id:', id);\n      setTodoData(todoData.filter(todo => todo._id !== id));\n    } catch (err) {\n      console.error('Error deleting todo:', err);\n    }\n  };\n  const updateTodo = async (id, updatedFields) => {\n    try {\n      const response = await axios.patch(`http://localhost:8000/api/todo/${id}`, updatedFields);\n      console.log('Updated todo:', response.data);\n      setTodoData(todoData.map(todo => todo._id === id ? response.data : todo));\n    } catch (err) {\n      console.error('Error updating todo:', err);\n    }\n  };\n  const handleEdit = (id, description) => {\n    setEditingTodoId(id);\n    setEditingDescription(description);\n  };\n  const handleEditSubmit = async id => {\n    await updateTodo(id, {\n      description: editingDescription\n    });\n    setEditingTodoId(null);\n    setEditingDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.ancestorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: Styles.todoInput,\n          type: \"text\",\n          value: newTodo,\n          onChange: event => setNewTodo(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: Styles.addButton,\n          onClick: addTodo,\n          children: \"+ New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.todoContainer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : todoData.length > 0 ? todoData.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.todo,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: entry.completed,\n            onChange: () => updateTodo(entry._id, {\n              completed: !entry.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this), entry.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => deleteTodo(entry._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEdit(entry._id, entry.description),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this), editingTodoId === entry._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingDescription,\n            onChange: e => setEditingDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditSubmit(entry._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }, this)]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available. Please add a new task.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(TODO, \"IiTzrpVNvj0bdFhSIJY7YsykzWA=\");\n_c = TODO;\nvar _c;\n$RefreshReg$(_c, \"TODO\");","map":{"version":3,"names":["useEffect","useState","Styles","axios","jsxDEV","_jsxDEV","TODO","_s","newTodo","setNewTodo","todoData","setTodoData","loading","setLoading","editingTodoId","setEditingTodoId","editingDescription","setEditingDescription","fetchTodo","apiData","getTodo","response","get","console","log","data","err","error","addTodo","post","title","deleteTodo","id","delete","filter","todo","_id","updateTodo","updatedFields","patch","map","handleEdit","description","handleEditSubmit","className","ancestorContainer","children","headerContainer","fileName","_jsxFileName","lineNumber","columnNumber","todoInput","type","value","onChange","event","target","addButton","onClick","todoContainer","length","entry","checked","completed","e","_c","$RefreshReg$"],"sources":["G:/Sambhav/JAVA FULL STACK/API/todoapp/client/src/Views/TODO/TODO.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Styles from './TODO.module.css';\r\nimport axios from 'axios';\r\n\r\nexport function TODO() {\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [todoData, setTodoData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editingTodoId, setEditingTodoId] = useState(null);\r\n    const [editingDescription, setEditingDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchTodo = async () => {\r\n            const apiData = await getTodo();\r\n            setTodoData(apiData);\r\n            setLoading(false);\r\n        }\r\n        fetchTodo();\r\n    }, []);\r\n\r\n    const getTodo = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/api/todo');\r\n            console.log('Fetched todos:', response.data);\r\n            return response.data;\r\n        } catch (err) {\r\n            console.error('Error fetching todos:', err);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const addTodo = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/todo', { title: newTodo });\r\n            console.log('Added todo:', response.data);\r\n            setTodoData([...todoData, response.data]);\r\n            setNewTodo('');\r\n        } catch (err) {\r\n            console.error('Error adding todo:', err);\r\n        }\r\n    }\r\n\r\n    const deleteTodo = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8000/api/todo/${id}`);\r\n            console.log('Deleted todo with id:', id);\r\n            setTodoData(todoData.filter(todo => todo._id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting todo:', err);\r\n        }\r\n    }\r\n\r\n    const updateTodo = async (id, updatedFields) => {\r\n        try {\r\n            const response = await axios.patch(`http://localhost:8000/api/todo/${id}`, updatedFields);\r\n            console.log('Updated todo:', response.data);\r\n            setTodoData(todoData.map(todo => todo._id === id ? response.data : todo));\r\n        } catch (err) {\r\n            console.error('Error updating todo:', err);\r\n        }\r\n    }\r\n\r\n    const handleEdit = (id, description) => {\r\n        setEditingTodoId(id);\r\n        setEditingDescription(description);\r\n    }\r\n\r\n    const handleEditSubmit = async (id) => {\r\n        await updateTodo(id, { description: editingDescription });\r\n        setEditingTodoId(null);\r\n        setEditingDescription('');\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.ancestorContainer}>\r\n            <div className={Styles.headerContainer}>\r\n                <h1>Tasks</h1>\r\n                <span>\r\n                    <input\r\n                        className={Styles.todoInput}\r\n                        type='text'\r\n                        value={newTodo}\r\n                        onChange={(event) => setNewTodo(event.target.value)}\r\n                    />\r\n                    <button\r\n                        className={Styles.addButton}\r\n                        onClick={addTodo}\r\n                    >\r\n                        + New Todo\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <div className={Styles.todoContainer}>\r\n                {loading ? (\r\n                    <p>Loading...</p>\r\n                ) : (\r\n                    todoData.length > 0 ? (\r\n                        todoData.map((entry) => (\r\n                            <div key={entry._id} className={Styles.todo}>\r\n                                <span>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        checked={entry.completed}\r\n                                        onChange={() => updateTodo(entry._id, { completed: !entry.completed })}\r\n                                    />\r\n                                    {entry.title}\r\n                                </span>\r\n                                <span onClick={() => deleteTodo(entry._id)}>Delete</span>\r\n                                <span onClick={() => handleEdit(entry._id, entry.description)}>Edit</span>\r\n                                {editingTodoId === entry._id && (\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={editingDescription}\r\n                                            onChange={(e) => setEditingDescription(e.target.value)}\r\n                                        />\r\n                                        <button onClick={() => handleEditSubmit(entry._id)}>Save</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>No tasks available. Please add a new task.</p>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}